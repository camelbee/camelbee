version: '2'

services:

  httpbin:
    image: 'kennethreitz/httpbin'
    ports:
      - 80:80
      
  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: camelbee
    volumes:
      - ./sql/mongodb:/docker-entrypoint-initdb.d

  mariadb:
    image: 'mariadb:10.7.8'
    volumes:
      - ./sql/mariadb:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_USER=camelbee_user
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=CAMELBEE_MARIADB
      - MYSQL_ALLOW_EMPTY_ROOT_PASSWORD=yes
    restart: always
    ports:
      - 3306:3306


  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883        # Standard MQTT port
      - 9001:9001        # Websockets (if you need it)

  myartemis:
    image: 'apache/activemq-artemis:latest-alpine'
    environment:
      ARTEMIS_USER: artemis
      ARTEMIS_PASSWORD: artemis
      ANONYMOUS_LOGIN: true
    ports:
      - 8161:8161
      - 9404:9404
      - 9876:9876
      - 61616:61616
      - 5445:5445
      - 5673:5673
      - 1884:1884
      - 61613:61613

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - 5672:5672      # AMQP port
      - 15672:15672   # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always

  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.0.1'
    networks:
      kafka_network:
        aliases:
          - zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  broker:
    image: 'confluentinc/cp-kafka:7.0.1'
    networks:
      kafka_network:
        aliases:
          - broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-mktopics:
    image: 'confluentinc/cp-kafka:7.0.1'
    networks:
      kafka_network:
        aliases:
          - kafka-mktopics
    depends_on:
      - broker
    entrypoint: ['/bin/bash', '-c']
    command: |
      "echo Waiting for Kafka to be ready... 
       cub kafka-ready -b broker:29092 1 80
      
       echo -e 'Creating camelbee topics'

      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --replication-factor 1 --partitions 1 --topic camelbee-northbound-topic

      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --replication-factor 1 --partitions 1 --topic camelbee-southbound-topic

      echo -e 'Topics was created successfully'
      kafka-topics --bootstrap-server broker:29092 --list
      "

networks:
  kafka_network:
    name: camelbee_kafka_network
    driver: bridge
