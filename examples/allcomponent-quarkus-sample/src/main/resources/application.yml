# Copyright 2023 Rahmi Ege Karaosmanoglu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

camelbee:
  # when enabled it allows the CamelBe WebGL application to fetch the topology of the Camel Context.
  context-enabled: true
  # tracer-enabled SHOULD BE ONLY ENABLED FOR DEVELOPMENT PURPOSES, NOT FOR PRODUCTION.
  # when enabled intercepts/traces request and responses of all camel components and caches messages.
  tracer-enabled: true
  # maximum time the tracer can remain idle before deactivation tracing of messages.
  tracer-max-idle-time: 60000
  # maximum collected trace messages
  tracer-max-messages-count: 10000
  # when enabled it logs the messages exchanged between endpoints
  logging-enabled: true

quarkus:
  http:
    port: 8080
    cors:
      ~: true
      origins: https://www.camelbee.io,http://localhost:8083
      methods: GET,POST,DELETE
      headers: "*"
      exposed-headers: Content-Disposition
      access-control-allow-credentials: true
      access-control-max-age: 24H

  cxf:
    path: /soap
  devservices:
    enabled: false
  banner:
    enabled: false
  test:
    continuous-testing: "disabled"
  smallrye-health:
    root-path: /health
  index-dependency:
    camelbeecore:
      group-id: io.camelbee
      artifact-id: camelbee-quarkus-core
  jackson:
    write-dates-as-timestamps: true
  micrometer:
    export:
      prometheus:
        path: /metrics
  log:
    console:
      json: true
    handler:
      json:
        # Disable the default MDC object
        record-mdc: false
        # Add MDC fields at root level
        additional-field:
          routeId: "%X{routeId}"
          endpoint: "%X{endpoint}"
          endpointId: "%X{endpointId}"
          messageType: "%X{messageType}"
          requestId: "%X{requestId}"
          transactionId: "%X{transactionId}"
          exchangeId: "%X{exchangeId}"
          exchangeEventType: "%X{exchangeEventType}"
          messageBody: "%X{messageBody}"
          headers: "%X{headers}"
          exception: "%X{exception}"
          timeStamp: "%X{timeStamp}"
        # Other settings
        date-format: "yyyy-MM-dd HH:mm:ss"
        pretty-print: true
        exception-output-type: detailed-and-formatted
        print-details: true
    category:
      "org.camelbee.logging.LoggingService":
        level: DEBUG

  artemis:
    url: tcp://localhost:61616
    username: artemis
    password: artemis
  datasource:
    dataSource:
      db-kind: mariadb
      jdbc:
        driver: org.mariadb.jdbc.Driver
        url: jdbc:mariadb://localhost:3306/CAMELBEE_MARIADB
      username: camelbee_user
      password: secret
  hibernate-orm:
    datasource: dataSource
    dialect: org.hibernate.dialect.MariaDBDialect
    host: localhost
    port: 5672
    username: guest
    password: guest
  mongodb:
    connection-string: mongodb://root:example@localhost:27017/camelbee?authSource=admin
camel:
  context:
    name: camelbee-quarkus-sample
  component:
    kafka:
      brokers: "localhost:9092"
      groupId: "camelbee"
      autoOffsetReset: "earliest"
    rabbitmq:
      hostname: localhost
      portNumber: 5672
      username: guest
      password: guest

httpbin-api:
  url: localhost/stream

httpbin-error-api:
  url: localhost/status